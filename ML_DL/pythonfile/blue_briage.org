* COMMENT Fibonacci求余数
#+BEGIN_SRC python :results output
  #阶乘
  def factorial(n):
      result=1
      for i in range(1,n+1):
          result *= i
      return result
  number=int(input("请输入一个正整数"))
  print("%d 的阶乘是:%d"%(number,factorial(number))) 
  #阶乘(递归)
  def factorial2(n):
      if n==1:
          return 1
      else:
          return n*factorial2(n-1)
  #lambda表达式
  a=lambda x :x**2
  print(a(2))
  #
#+END_SRC

#+RESULTS:
: 120
: 4
#+BEGIN_SRC python :results output
  def fab(n):
      n1=1
      n2=2
      if n<1:
          print("输入错误")
          return -1
      while (n-2)>0:
          n3=n2+n1
          n1=n2
          n2=n3
          n-=1
      return n3
  def fab2(n):
      if n<1:
          print("输入错误")
          return -1
      if n==1 or n==2:
          return 1
      else:
          return fab2(n-2)+fab2(n-1)
  #生成器
  def libs():
      a=0
      b=1
      while True:
          a,b=b,a+b
          yield a
  for each in libs():
      if each>100:
          break
      print(each,end=' ')
  #迭代器
  class Fibs:
      def __init__(self,n):
          self.a=0
          self.b=1
          self.n=n
      def __iter__(self):
          return self
      def __next__(self):
          self.a,self.b=self.b,self.a+self.b
          if self.a>self.n:
              raise StopIteration
          return self.a
  fibs=Fibs(n)
  for each in fibs():
      print(each)
  #hanoi
  def hanoi(n,x,y,z):
      if n==1:
          print(x,'--->',z)
      else:
          hanoi(n-1,x,z,y)#将前n-1个盘子从x移动到y上
          print(x,'--->',z)#将最底下的最后一个盘子从x移动到z上
          hanoi(n-1,y,x,z)#将y上的n-1个盘子移动到z上

#+END_SRC

#+RESULTS:


